// Generated from /home/zhichyu/src/github.com/deepfabric/indexer/cql/parser/CQL.g4 by ANTLR 4.7.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 29, 286,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 3, 2, 3, 2,
	3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4,
	3, 4, 3, 4, 3, 4, 3, 4, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5,
	3, 5, 3, 5, 3, 5, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 7,
	3, 7, 3, 7, 3, 7, 3, 7, 3, 7, 3, 7, 3, 7, 3, 7, 3, 7, 3, 7, 3, 8, 3, 8,
	3, 8, 3, 8, 3, 8, 3, 8, 3, 9, 3, 9, 3, 9, 3, 9, 3, 9, 3, 9, 3, 9, 3, 9,
	3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 11, 3, 11, 3, 11, 3, 11, 3,
	11, 3, 11, 3, 12, 3, 12, 3, 12, 3, 12, 3, 12, 3, 12, 3, 12, 3, 13, 3, 13,
	3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 14, 3, 14, 3, 14, 3, 14, 3, 14, 3,
	14, 3, 14, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15, 3, 16, 3, 16, 3, 16, 3, 16,
	3, 16, 3, 16, 3, 16, 3, 17, 3, 17, 3, 17, 3, 18, 3, 18, 3, 18, 3, 18, 3,
	18, 3, 18, 3, 18, 3, 18, 3, 18, 3, 19, 3, 19, 3, 20, 3, 20, 3, 21, 3, 21,
	3, 22, 3, 22, 3, 22, 3, 23, 3, 23, 3, 23, 3, 24, 3, 24, 3, 24, 7, 24, 212,
	10, 24, 12, 24, 14, 24, 215, 11, 24, 3, 24, 3, 24, 3, 25, 3, 25, 3, 25,
	5, 25, 222, 10, 25, 3, 26, 3, 26, 3, 26, 3, 26, 3, 26, 3, 26, 3, 27, 3,
	27, 3, 28, 5, 28, 233, 10, 28, 3, 28, 3, 28, 3, 28, 6, 28, 238, 10, 28,
	13, 28, 14, 28, 239, 3, 28, 5, 28, 243, 10, 28, 3, 28, 5, 28, 246, 10,
	28, 3, 28, 3, 28, 3, 28, 3, 28, 5, 28, 252, 10, 28, 3, 28, 5, 28, 255,
	10, 28, 3, 29, 3, 29, 3, 29, 7, 29, 260, 10, 29, 12, 29, 14, 29, 263, 11,
	29, 5, 29, 265, 10, 29, 3, 30, 3, 30, 5, 30, 269, 10, 30, 3, 30, 3, 30,
	3, 31, 3, 31, 7, 31, 275, 10, 31, 12, 31, 14, 31, 278, 11, 31, 3, 32, 6,
	32, 281, 10, 32, 13, 32, 14, 32, 282, 3, 32, 3, 32, 2, 2, 33, 3, 3, 5,
	4, 7, 5, 9, 6, 11, 7, 13, 8, 15, 9, 17, 10, 19, 11, 21, 12, 23, 13, 25,
	14, 27, 15, 29, 16, 31, 17, 33, 18, 35, 19, 37, 20, 39, 21, 41, 22, 43,
	23, 45, 24, 47, 25, 49, 2, 51, 2, 53, 2, 55, 26, 57, 27, 59, 2, 61, 28,
	63, 29, 3, 2, 12, 4, 2, 36, 36, 94, 94, 10, 2, 36, 36, 49, 49, 94, 94,
	100, 100, 104, 104, 112, 112, 116, 116, 118, 118, 5, 2, 50, 59, 67, 72,
	99, 104, 3, 2, 50, 59, 3, 2, 51, 59, 4, 2, 71, 71, 103, 103, 4, 2, 45,
	45, 47, 47, 5, 2, 67, 92, 97, 97, 99, 124, 6, 2, 50, 59, 67, 92, 97, 97,
	99, 124, 5, 2, 11, 12, 15, 15, 34, 34, 2, 296, 2, 3, 3, 2, 2, 2, 2, 5,
	3, 2, 2, 2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13,
	3, 2, 2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2,
	21, 3, 2, 2, 2, 2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2, 2,
	2, 29, 3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3, 2, 2,
	2, 2, 37, 3, 2, 2, 2, 2, 39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 43, 3, 2,
	2, 2, 2, 45, 3, 2, 2, 2, 2, 47, 3, 2, 2, 2, 2, 55, 3, 2, 2, 2, 2, 57, 3,
	2, 2, 2, 2, 61, 3, 2, 2, 2, 2, 63, 3, 2, 2, 2, 3, 65, 3, 2, 2, 2, 5, 76,
	3, 2, 2, 2, 7, 83, 3, 2, 2, 2, 9, 95, 3, 2, 2, 2, 11, 106, 3, 2, 2, 2,
	13, 114, 3, 2, 2, 2, 15, 125, 3, 2, 2, 2, 17, 131, 3, 2, 2, 2, 19, 139,
	3, 2, 2, 2, 21, 145, 3, 2, 2, 2, 23, 151, 3, 2, 2, 2, 25, 158, 3, 2, 2,
	2, 27, 165, 3, 2, 2, 2, 29, 172, 3, 2, 2, 2, 31, 177, 3, 2, 2, 2, 33, 184,
	3, 2, 2, 2, 35, 187, 3, 2, 2, 2, 37, 196, 3, 2, 2, 2, 39, 198, 3, 2, 2,
	2, 41, 200, 3, 2, 2, 2, 43, 202, 3, 2, 2, 2, 45, 205, 3, 2, 2, 2, 47, 208,
	3, 2, 2, 2, 49, 218, 3, 2, 2, 2, 51, 223, 3, 2, 2, 2, 53, 229, 3, 2, 2,
	2, 55, 254, 3, 2, 2, 2, 57, 264, 3, 2, 2, 2, 59, 266, 3, 2, 2, 2, 61, 272,
	3, 2, 2, 2, 63, 280, 3, 2, 2, 2, 65, 66, 7, 75, 2, 2, 66, 67, 7, 70, 2,
	2, 67, 68, 7, 90, 2, 2, 68, 69, 7, 48, 2, 2, 69, 70, 7, 69, 2, 2, 70, 71,
	7, 84, 2, 2, 71, 72, 7, 71, 2, 2, 72, 73, 7, 67, 2, 2, 73, 74, 7, 86, 2,
	2, 74, 75, 7, 71, 2, 2, 75, 4, 3, 2, 2, 2, 76, 77, 7, 85, 2, 2, 77, 78,
	7, 69, 2, 2, 78, 79, 7, 74, 2, 2, 79, 80, 7, 71, 2, 2, 80, 81, 7, 79, 2,
	2, 81, 82, 7, 67, 2, 2, 82, 6, 3, 2, 2, 2, 83, 84, 7, 75, 2, 2, 84, 85,
	7, 70, 2, 2, 85, 86, 7, 90, 2, 2, 86, 87, 7, 48, 2, 2, 87, 88, 7, 70, 2,
	2, 88, 89, 7, 71, 2, 2, 89, 90, 7, 85, 2, 2, 90, 91, 7, 86, 2, 2, 91, 92,
	7, 84, 2, 2, 92, 93, 7, 81, 2, 2, 93, 94, 7, 91, 2, 2, 94, 8, 3, 2, 2,
	2, 95, 96, 7, 75, 2, 2, 96, 97, 7, 70, 2, 2, 97, 98, 7, 90, 2, 2, 98, 99,
	7, 48, 2, 2, 99, 100, 7, 75, 2, 2, 100, 101, 7, 80, 2, 2, 101, 102, 7,
	85, 2, 2, 102, 103, 7, 71, 2, 2, 103, 104, 7, 84, 2, 2, 104, 105, 7, 86,
	2, 2, 105, 10, 3, 2, 2, 2, 106, 107, 7, 75, 2, 2, 107, 108, 7, 70, 2, 2,
	108, 109, 7, 90, 2, 2, 109, 110, 7, 48, 2, 2, 110, 111, 7, 70, 2, 2, 111,
	112, 7, 71, 2, 2, 112, 113, 7, 78, 2, 2, 113, 12, 3, 2, 2, 2, 114, 115,
	7, 75, 2, 2, 115, 116, 7, 70, 2, 2, 116, 117, 7, 90, 2, 2, 117, 118, 7,
	48, 2, 2, 118, 119, 7, 85, 2, 2, 119, 120, 7, 71, 2, 2, 120, 121, 7, 78,
	2, 2, 121, 122, 7, 71, 2, 2, 122, 123, 7, 69, 2, 2, 123, 124, 7, 86, 2,
	2, 124, 14, 3, 2, 2, 2, 125, 126, 7, 89, 2, 2, 126, 127, 7, 74, 2, 2, 127,
	128, 7, 71, 2, 2, 128, 129, 7, 84, 2, 2, 129, 130, 7, 71, 2, 2, 130, 16,
	3, 2, 2, 2, 131, 132, 7, 81, 2, 2, 132, 133, 7, 84, 2, 2, 133, 134, 7,
	70, 2, 2, 134, 135, 7, 71, 2, 2, 135, 136, 7, 84, 2, 2, 136, 137, 7, 68,
	2, 2, 137, 138, 7, 91, 2, 2, 138, 18, 3, 2, 2, 2, 139, 140, 7, 78, 2, 2,
	140, 141, 7, 75, 2, 2, 141, 142, 7, 79, 2, 2, 142, 143, 7, 75, 2, 2, 143,
	144, 7, 86, 2, 2, 144, 20, 3, 2, 2, 2, 145, 146, 7, 87, 2, 2, 146, 147,
	7, 75, 2, 2, 147, 148, 7, 80, 2, 2, 148, 149, 7, 86, 2, 2, 149, 150, 7,
	58, 2, 2, 150, 22, 3, 2, 2, 2, 151, 152, 7, 87, 2, 2, 152, 153, 7, 75,
	2, 2, 153, 154, 7, 80, 2, 2, 154, 155, 7, 86, 2, 2, 155, 156, 7, 51, 2,
	2, 156, 157, 7, 56, 2, 2, 157, 24, 3, 2, 2, 2, 158, 159, 7, 87, 2, 2, 159,
	160, 7, 75, 2, 2, 160, 161, 7, 80, 2, 2, 161, 162, 7, 86, 2, 2, 162, 163,
	7, 53, 2, 2, 163, 164, 7, 52, 2, 2, 164, 26, 3, 2, 2, 2, 165, 166, 7, 87,
	2, 2, 166, 167, 7, 75, 2, 2, 167, 168, 7, 80, 2, 2, 168, 169, 7, 86, 2,
	2, 169, 170, 7, 56, 2, 2, 170, 171, 7, 54, 2, 2, 171, 28, 3, 2, 2, 2, 172,
	173, 7, 71, 2, 2, 173, 174, 7, 80, 2, 2, 174, 175, 7, 87, 2, 2, 175, 176,
	7, 79, 2, 2, 176, 30, 3, 2, 2, 2, 177, 178, 7, 85, 2, 2, 178, 179, 7, 86,
	2, 2, 179, 180, 7, 84, 2, 2, 180, 181, 7, 75, 2, 2, 181, 182, 7, 80, 2,
	2, 182, 183, 7, 73, 2, 2, 183, 32, 3, 2, 2, 2, 184, 185, 7, 75, 2, 2, 185,
	186, 7, 80, 2, 2, 186, 34, 3, 2, 2, 2, 187, 188, 7, 69, 2, 2, 188, 189,
	7, 81, 2, 2, 189, 190, 7, 80, 2, 2, 190, 191, 7, 86, 2, 2, 191, 192, 7,
	67, 2, 2, 192, 193, 7, 75, 2, 2, 193, 194, 7, 80, 2, 2, 194, 195, 7, 85,
	2, 2, 195, 36, 3, 2, 2, 2, 196, 197, 7, 62, 2, 2, 197, 38, 3, 2, 2, 2,
	198, 199, 7, 64, 2, 2, 199, 40, 3, 2, 2, 2, 200, 201, 7, 63, 2, 2, 201,
	42, 3, 2, 2, 2, 202, 203, 7, 62, 2, 2, 203, 204, 7, 63, 2, 2, 204, 44,
	3, 2, 2, 2, 205, 206, 7, 64, 2, 2, 206, 207, 7, 63, 2, 2, 207, 46, 3, 2,
	2, 2, 208, 213, 7, 36, 2, 2, 209, 212, 5, 49, 25, 2, 210, 212, 10, 2, 2,
	2, 211, 209, 3, 2, 2, 2, 211, 210, 3, 2, 2, 2, 212, 215, 3, 2, 2, 2, 213,
	211, 3, 2, 2, 2, 213, 214, 3, 2, 2, 2, 214, 216, 3, 2, 2, 2, 215, 213,
	3, 2, 2, 2, 216, 217, 7, 36, 2, 2, 217, 48, 3, 2, 2, 2, 218, 221, 7, 94,
	2, 2, 219, 222, 9, 3, 2, 2, 220, 222, 5, 51, 26, 2, 221, 219, 3, 2, 2,
	2, 221, 220, 3, 2, 2, 2, 222, 50, 3, 2, 2, 2, 223, 224, 7, 119, 2, 2, 224,
	225, 5, 53, 27, 2, 225, 226, 5, 53, 27, 2, 226, 227, 5, 53, 27, 2, 227,
	228, 5, 53, 27, 2, 228, 52, 3, 2, 2, 2, 229, 230, 9, 4, 2, 2, 230, 54,
	3, 2, 2, 2, 231, 233, 7, 47, 2, 2, 232, 231, 3, 2, 2, 2, 232, 233, 3, 2,
	2, 2, 233, 234, 3, 2, 2, 2, 234, 235, 5, 57, 29, 2, 235, 237, 7, 48, 2,
	2, 236, 238, 9, 5, 2, 2, 237, 236, 3, 2, 2, 2, 238, 239, 3, 2, 2, 2, 239,
	237, 3, 2, 2, 2, 239, 240, 3, 2, 2, 2, 240, 242, 3, 2, 2, 2, 241, 243,
	5, 59, 30, 2, 242, 241, 3, 2, 2, 2, 242, 243, 3, 2, 2, 2, 243, 255, 3,
	2, 2, 2, 244, 246, 7, 47, 2, 2, 245, 244, 3, 2, 2, 2, 245, 246, 3, 2, 2,
	2, 246, 247, 3, 2, 2, 2, 247, 248, 5, 57, 29, 2, 248, 249, 5, 59, 30, 2,
	249, 255, 3, 2, 2, 2, 250, 252, 7, 47, 2, 2, 251, 250, 3, 2, 2, 2, 251,
	252, 3, 2, 2, 2, 252, 253, 3, 2, 2, 2, 253, 255, 5, 57, 29, 2, 254, 232,
	3, 2, 2, 2, 254, 245, 3, 2, 2, 2, 254, 251, 3, 2, 2, 2, 255, 56, 3, 2,
	2, 2, 256, 265, 7, 50, 2, 2, 257, 261, 9, 6, 2, 2, 258, 260, 9, 5, 2, 2,
	259, 258, 3, 2, 2, 2, 260, 263, 3, 2, 2, 2, 261, 259, 3, 2, 2, 2, 261,
	262, 3, 2, 2, 2, 262, 265, 3, 2, 2, 2, 263, 261, 3, 2, 2, 2, 264, 256,
	3, 2, 2, 2, 264, 257, 3, 2, 2, 2, 265, 58, 3, 2, 2, 2, 266, 268, 9, 7,
	2, 2, 267, 269, 9, 8, 2, 2, 268, 267, 3, 2, 2, 2, 268, 269, 3, 2, 2, 2,
	269, 270, 3, 2, 2, 2, 270, 271, 5, 57, 29, 2, 271, 60, 3, 2, 2, 2, 272,
	276, 9, 9, 2, 2, 273, 275, 9, 10, 2, 2, 274, 273, 3, 2, 2, 2, 275, 278,
	3, 2, 2, 2, 276, 274, 3, 2, 2, 2, 276, 277, 3, 2, 2, 2, 277, 62, 3, 2,
	2, 2, 278, 276, 3, 2, 2, 2, 279, 281, 9, 11, 2, 2, 280, 279, 3, 2, 2, 2,
	281, 282, 3, 2, 2, 2, 282, 280, 3, 2, 2, 2, 282, 283, 3, 2, 2, 2, 283,
	284, 3, 2, 2, 2, 284, 285, 8, 32, 2, 2, 285, 64, 3, 2, 2, 2, 17, 2, 211,
	213, 221, 232, 239, 242, 245, 251, 254, 261, 264, 268, 276, 282, 3, 8,
	2, 2,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'IDX.CREATE'", "'SCHEMA'", "'IDX.DESTROY'", "'IDX.INSERT'", "'IDX.DEL'",
	"'IDX.SELECT'", "'WHERE'", "'ORDERBY'", "'LIMIT'", "'UINT8'", "'UINT16'",
	"'UINT32'", "'UINT64'", "'ENUM'", "'STRING'", "'IN'", "'CONTAINS'", "'<'",
	"'>'", "'='", "'<='", "'>='",
}

var lexerSymbolicNames = []string{
	"", "", "", "", "", "", "", "", "", "", "K_UINT8", "K_UINT16", "K_UINT32",
	"K_UINT64", "K_ENUM", "K_STRING", "K_IN", "K_CONTAINS", "K_LT", "K_BT",
	"K_EQ", "K_LE", "K_BE", "STRING", "NUMBER", "INT", "IDENTIFIER", "WS",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
	"K_UINT8", "K_UINT16", "K_UINT32", "K_UINT64", "K_ENUM", "K_STRING", "K_IN",
	"K_CONTAINS", "K_LT", "K_BT", "K_EQ", "K_LE", "K_BE", "STRING", "ESC",
	"UNICODE", "HEX", "NUMBER", "INT", "EXP", "IDENTIFIER", "WS",
}

type CQLLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

func init() {
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
}

func NewCQLLexer(input antlr.CharStream) *CQLLexer {

	l := new(CQLLexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "CQL.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// CQLLexer tokens.
const (
	CQLLexerT__0       = 1
	CQLLexerT__1       = 2
	CQLLexerT__2       = 3
	CQLLexerT__3       = 4
	CQLLexerT__4       = 5
	CQLLexerT__5       = 6
	CQLLexerT__6       = 7
	CQLLexerT__7       = 8
	CQLLexerT__8       = 9
	CQLLexerK_UINT8    = 10
	CQLLexerK_UINT16   = 11
	CQLLexerK_UINT32   = 12
	CQLLexerK_UINT64   = 13
	CQLLexerK_ENUM     = 14
	CQLLexerK_STRING   = 15
	CQLLexerK_IN       = 16
	CQLLexerK_CONTAINS = 17
	CQLLexerK_LT       = 18
	CQLLexerK_BT       = 19
	CQLLexerK_EQ       = 20
	CQLLexerK_LE       = 21
	CQLLexerK_BE       = 22
	CQLLexerSTRING     = 23
	CQLLexerNUMBER     = 24
	CQLLexerINT        = 25
	CQLLexerIDENTIFIER = 26
	CQLLexerWS         = 27
)
